/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */
group = 'cn.afterturn'
version = '0.1-beta'

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "io.spring.dependency-management"

    buildscript {
        ext {
            springBootVersion ='1.5.8.RELEASE'
        }
        repositories {
            maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
            mavenLocal()//maven的本地仓
            jcenter()//官方仓
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
            classpath("io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE")
        }
    }



    // In this section you declare where to find the dependencies of your project
    repositories {
        // Use 'jcenter' for resolving your dependencies.
        // You can declare any Maven/Ivy/file repository here.
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    [compileJava, javadoc, compileTestJava]*.options*.encoding = 'UTF-8'



    task sourcesJar(type: Jar, dependsOn: classes) {
            classifier = 'sources'
            from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    ext {
        springBootVersion ='1.5.8.RELEASE'
        springVersion = '4.3.12.RELEASE'
        poiVersion='3.15'
        easypoiVersion = '3.0.3'
    }

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'
   // compile group: 'io.spring.gradle', name: 'dependency-management-plugin', version: '1.0.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: "$springBootVersion"
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "$springBootVersion"

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web',version:"$springBootVersion"


    compile group: 'cn.afterturn', name: 'easypoi-annotation', version: "$easypoiVersion"
    compile group: 'cn.afterturn', name: 'easypoi-base', version: "$easypoiVersion"
    compile group: 'cn.afterturn', name: 'easypoi', version: "$easypoiVersion", ext: 'pom'
    compile group: 'cn.afterturn', name: 'easypoi-web', version: "$easypoiVersion"


    compile group: 'org.apache.poi', name: 'poi', version:"$poiVersion"
    compile group: 'org.apache.poi', name: 'poi-ooxml', version:"$poiVersion"
    compile group: 'org.apache.poi', name: 'poi-scratchpad', version:"$poiVersion"
    compile(group: 'org.apache.poi', name: 'poi-ooxml-schemas', version:"$poiVersion") {
        exclude(module: 'xercesImpl')
    }
    compile group: 'xerces', name: 'xercesImpl', version:'2.9.1'
    compile group: 'com.itextpdf', name: 'itextpdf', version:'5.5.6'
    compile group: 'com.itextpdf', name: 'itext-asian', version:'5.2.0'
    compile group: 'org.apache.commons',name: 'commons-lang3',version: '3.3.2'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}